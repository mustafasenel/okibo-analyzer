const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkStorageUsage() {
  try {
    console.log('üíæ Depolama kullanƒ±mƒ± kontrol ediliyor...');
    
    // Toplam g√∂rsel sayƒ±sƒ± ve boyutu
    const images = await prisma.invoiceImage.findMany({
      select: {
        size: true,
        originalName: true,
        createdAt: true
      }
    });

    const totalImages = images.length;
    const totalSizeBytes = images.reduce((sum, img) => sum + img.size, 0);
    const totalSizeMB = (totalSizeBytes / (1024 * 1024)).toFixed(2);
    const totalSizeKB = (totalSizeBytes / 1024).toFixed(2);

    console.log(`üìä G√∂rsel ƒ∞statistikleri:`);
    console.log(`   Toplam g√∂rsel sayƒ±sƒ±: ${totalImages}`);
    console.log(`   Toplam boyut: ${totalSizeMB} MB (${totalSizeKB} KB)`);
    console.log(`   Ortalama g√∂rsel boyutu: ${totalImages > 0 ? (totalSizeBytes / totalImages / 1024).toFixed(1) : 0} KB`);
    console.log('');

    // Fatura sayƒ±sƒ±
    const invoiceCount = await prisma.invoice.count();
    console.log(`üìÑ Toplam fatura sayƒ±sƒ±: ${invoiceCount}`);
    console.log(`üìà Fatura ba≈üƒ±na ortalama g√∂rsel: ${invoiceCount > 0 ? (totalImages / invoiceCount).toFixed(1) : 0}`);
    console.log('');

    // Depolama limitleri
    const freeStorageMB = 512; // MongoDB Atlas √ºcretsiz tier
    const usedPercentage = ((totalSizeBytes / (1024 * 1024)) / freeStorageMB * 100).toFixed(1);
    
    console.log(`üéØ Depolama Durumu:`);
    console.log(`   Kullanƒ±lan: ${totalSizeMB} MB / ${freeStorageMB} MB`);
    console.log(`   Kullanƒ±m oranƒ±: %${usedPercentage}`);
    console.log(`   Kalan alan: ${(freeStorageMB - parseFloat(totalSizeMB)).toFixed(2)} MB`);
    console.log('');

    // Tahminler
    if (totalImages > 0) {
      const avgImageSizeKB = totalSizeBytes / totalImages / 1024;
      const remainingImages = Math.floor((freeStorageMB * 1024 - totalSizeBytes / 1024) / avgImageSizeKB);
      
      console.log(`üîÆ Tahminler:`);
      console.log(`   Ortalama g√∂rsel boyutu: ${avgImageSizeKB.toFixed(1)} KB`);
      console.log(`   Daha saklayabileceƒüiniz g√∂rsel: ~${remainingImages} adet`);
      console.log(`   G√ºnl√ºk 10 g√∂rsel ile: ~${Math.floor(remainingImages / 10)} g√ºn`);
    }

  } catch (error) {
    console.error('‚ùå Hata:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkStorageUsage();
